/**
 * üìö Revis√£o r√°pida do Dia 1:
 * - O que √© TypeScript.
 * - Como ele adiciona tipagem est√°tica ao JavaScript.
 * - Como declarar vari√°veis com tipos b√°sicos: string, number, boolean, etc.
 */
/**
 * üß† Objetivo do Dia 2:
 * Hoje voc√™ vai aprender a:
 * - Declarar e usar fun√ß√µes com TypeScript.
 * - Tipar par√¢metros e retornos de fun√ß√µes.
 * - Usar tipos opcionais e valores padr√£o.
 * - Criar fun√ß√µes an√¥nimas e arrow functions com tipos.
 */
/**
 * ‚úÖ 1. Fun√ß√µes com Tipos
 * üß™ Exemplo b√°sico:
 */
function saudacao(nome) {
    return "Ol\u00E1, ".concat(nome, "!");
}
console.log(saudacao("Gabriel")); // Ol√°, Gabriel!
/**
 * Explicando:
 * - nome: string ‚Üí par√¢metro nome deve ser uma string.
 * - : string ap√≥s o par√™ntese ‚Üí o retorno da fun√ß√£o tamb√©m √© string.
 * - Se tentar passar um n√∫mero, TypeScript vai reclamar!
 */
/**
 * ‚úÖ 2. Fun√ß√£o com m√∫ltiplos par√¢metros
 */
function soma(a, b) {
    return a + b;
}
console.log(soma(5, 3)); // 8
/**
 * ‚úÖ 3. Par√¢metros opcionais
 * Use ? para indicar que o par√¢metro √© opcional:
 */
function apresentar(nome, idade) {
    if (idade) {
        return "Ol\u00E1, me chamo ".concat(nome, " e tenho ").concat(idade, " anos.");
    }
    return "Ol\u00E1, me chamo ".concat(nome, ".");
}
console.log(apresentar("Gabriel"));
console.log(apresentar("Gabriel", 27));
/**
 * ‚úÖ 4. Par√¢metros com valor padr√£o
 */
function multiplicar(a, b) {
    if (b === void 0) { b = 2; }
    return a * b;
}
console.log(multiplicar(4)); // 8
console.log(multiplicar(4, 3)); // 12
/**
 * ‚úÖ 5. Fun√ß√µes an√¥nimas e arrow functions
 */
var dividir = function (a, b) {
    return a / b;
};
console.log(dividir(10, 2)); // 5
/**
 * ‚úÖ 6. Fun√ß√£o que n√£o retorna nada (void)
 */
function logMensagem(mensagem) {
    console.log("Mensagem: ".concat(mensagem));
}
/**
 * ‚úÖ Exerc√≠cio 2 (pra voc√™ praticar):
 * Crie uma fun√ß√£o chamada descreverPessoa que:
 * - Recebe:
 * -- nome: string
 * -- idade: number
 * -- profissao: string (opcional)
 * Retorna uma frase descrevendo a pessoa.
 * Se a profiss√£o for passada, inclua na frase. Se n√£o, apenas nome e idade.
 */
function descreverPessoa(nome, idade, profissao) {
    if (profissao) {
        return "".concat(nome, " tem ").concat(idade, " anos e trabalha como ").concat(profissao, ".");
    }
    return "".concat(nome, " tem ").concat(idade, " anos.");
}
/**
 * Exemplo esperado:
 */
descreverPessoa("Gabriel", 28, "Desenvolvedor");
// ‚Üí "Gabriel tem 28 anos e trabalha como Desenvolvedor."
descreverPessoa("Lucas", 25);
// ‚Üí "Lucas tem 25 anos."
